# Setup
ruby_info = "[#{RUBY_VERSION}p#{RUBY_PATCHLEVEL}"
rails_info = defined?(Rails) ? "#{Rails.application.class.parent_name.downcase}|#{Rails.env}" : nil

# Prompt
Pry.config.prompt = [
  proc do |conf|
    tree = conf.binding_stack.map { |stack| Pry.view_clip stack.eval("self") } * " / "
    [ruby_info, rails_info, "PRY #{tree} - #{conf.expr_number}:#{conf.nesting_level}]> "].compact * '|'
  end
]

# History
Pry.config.history.file = "#{ENV['HOME']}/.irb_history" # Keep IRB and Pry history the same.

# Aliases
Pry.commands.alias_command 'w', "whereami" rescue nil

if defined?(Byebug)
  Pry.commands.alias_command 'c', "continue" rescue nil
  Pry.commands.alias_command 's', "step" rescue nil
  Pry.commands.alias_command 'n', "next" rescue nil
  Pry.commands.alias_command 'f', "finish" rescue nil
  Pry.commands.alias_command "bp", "break" rescue nil
  Pry.commands.alias_command "bpe", "break --enable" rescue nil
  Pry.commands.alias_command "bpd", "break --disable" rescue nil
  Pry.commands.alias_command "bpD", "break --delete" rescue nil
  Pry.commands.alias_command "bpc", "break --disable-all" rescue nil
  Pry.commands.alias_command "bpC", "break --delete-all" rescue nil
  Pry.commands.alias_command "bph", "break --help" rescue nil
end

# Editors
Pry.config.editor = "sublime"

# Gem Enhancements (requirements)
%w(bond hirb awesome_print).each do |gem|
  begin
    require gem
  rescue LoadError
    STDERR.puts "Unable to load #{gem}: #{$!}"
  end
end

# Gem Enhancements (settings)
begin
  Bond.start
  Hirb.enable

  old_print = Pry.config.print
  Pry.config.print = proc do |*args|
    Hirb::View.view_or_page_output(args[1]) || old_print.call(*args)
  end
rescue NoMethodError
  STDERR.puts "Unable to configure Hirb: #{$!}"
end
